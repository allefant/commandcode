from __future__ import division
from math import *

letters = " _'><?!+-=0123456789abcdefghijklmnopqrstuvwxyz"

glyphstring = """
.....
.....
.....
.....
.....
_
.....
.....
.....
.....
2*..1
'
1....
.....
2....
.....
.....
>
1....
.....
....2
.....
3....
<
....1
.....
2....
.....
....3
?
..2..
1...3
..4..
.....
.6.7.
!
..1..
.....
..2..
.....
.6.7.
+
..5..
.....
1...2
.....
..4..
-
.....
.....
1...2
.....
.....
=
.....
1...2
.....
4...5
.....
0
4*..1
.....
.....
.....
3...2
1
1....
.....
.....
.....
2....
2
1...2
.....
4...3
.....
5...6
3
1....
....2
3....
....4
5....
4
1....
....4
2..3 
.....
....5
5
2...1
.....
3...4
.....
6...5
6
2...1
.....
6...5
.....
3...4
7
1...2
.....
.....
.....
....3
8
1...2
.....
6...7
.....
4*..3
9
3...4
.....
2...1
.....
....5
A
..2..
.....
.5.6.
.....
1...3
B
2....
..3..
4....
..5*.
1....
C
..1..
.....
2....
.....
..3..
D
1....
.....
..3*.
.....
2....
E
1.8*.
.....
5.6..
.....
2.3..
F
2.3..
.....
5.6..
.....
1....
G
..1..
.....
254..
.....
..3..
H
1.4..
.....
7.8..
.....
2.5..
I
.415.
.....
.....
.....
.728.
J
..4..
.....
1....
.....
2.3..
K
1.4..
.....
5....
.....
2.6..
L
1....
.....
.....
.....
2.3..
M
.2.4.
.....
.....
.....
1.3.5
N
2.3..
.....
.....
.....
1.4..
O
2.3..
.....
.....
.....
1.4*.
P
2.3..
.....
5.4..
.....
1....
Q
3.4*.
.....
.....
.6...
2.17.
R
2....
..3..
4....
.....
1.5..
S
..1..
.....
2.3..
.....
4....
T
415..
.....
.....
.....
.2...
U
1.4..
.....
.....
.....
2.3..
V
1.3..
.....
.....
.....
.2...
W
1.3.5
.....
.....
.....
.2.4.
X
4.2..
.....
.....
.....
1.5..
Y
4*6*.
.....
.1...
.....
.2...
Z
1.2..
.....
.....
.....
3.4..

"""

class Glyph:
    pass

def get_glyphs(size):
    glyphs = {}
    rows = glyphstring.strip().splitlines()
    pos = 0
    for a in letters:
        points = {}
        for i in range(5):
            row = rows[pos + i] + " "
            for j in range(5):
                if row[j] in "123456789":
                    star = row[j + 1] == "*"
                    points[int(row[j])] = j, i, star
                    
        pos += 6

        lines = []
        
        class Line: pass
        def line(x1, y1, x2, y2):
            l = Line()
            x1 *= size
            y1 *= size
            x2 *= size
            y2 *= size
            dx = x2 - x1
            dy = y2 - y1
            d = sqrt(dx * dx + dy * dy)
            d += 8
            x1 -= dx * 4 / d
            y1 -= dy * 4 / d
            x2 += dx * 4 / d
            y2 += dy * 4 / d
            l.length = d
            l.angle = atan2(dy, dx)
            l.start = x1, y1
            l.end = x2, y2
            lines.append(l)
        
        for i in range(1, 10):
            if i in points:
                x1, y1, star = points[i]
                if star:
                    x2, y2, star = points[1]
                    line(x1, y1, x2, y2)
                elif (i + 1) in points:
                    x2, y2, star = points[(i + 1)]
                    line(x1, y1, x2, y2)
        glyphs[a] = Glyph()
        glyphs[a].lines = lines
    return glyphs
